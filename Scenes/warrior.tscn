[gd_scene load_steps=13 format=3 uid="uid://rxsvnbwdeuqf"]

[ext_resource type="PackedScene" uid="uid://bwf7gfedd78fw" path="res://GLTF/Warrior.glb" id="1_8vmdt"]
[ext_resource type="PackedScene" uid="uid://chxycsp754fpi" path="res://Scenes/heavy_sword.tscn" id="2_y88qg"]

[sub_resource type="GDScript" id="GDScript_kyy2f"]
script/source = "extends CharacterBody3D

var SPEED = 10
var RUN_SPEED = 10
var WALK_SPEED = 5
const Lerp_val = 0.15
const JUMP_VELOCITY = 11

@onready var armature = $Armature
@onready var SAP = $SpringArmPivot
@onready var SA = $SpringArmPivot/SpringArm3D
@onready var anim_tree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if event is InputEventMouseMotion:
		SAP.rotate_y(-event.relative.x * 0.005)
		SA.rotate_x(-event.relative.y * 0.005)
		SA.rotation.x = clamp(SA.rotation.x, -PI/4, PI/4)


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		anim_tree.set(\"parameters/JUMP/active\",true)

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated(Vector3.UP, SAP.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, Lerp_val)
		velocity.z = lerp(velocity.z, direction.z * SPEED, Lerp_val)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), Lerp_val)

	else:
		velocity.x = lerp(velocity.x, 0.0, Lerp_val)
		velocity.z = lerp(velocity.z, 0.0, Lerp_val)
	anim_tree.set(\"parameters/RUN/blend_position\",velocity.length() / SPEED)

	move_and_slide()
"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3tpsw"]
animation = &"JUMP"

[sub_resource type="AnimationNodeOneShot" id="AnimationNodeOneShot_2p8e8"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_v8osb"]
animation = &"IDLE"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vcy3y"]
animation = &"RUN"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_8jiba"]
blend_point_0/node = SubResource("AnimationNodeAnimation_v8osb")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_vcy3y")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_mh6d1"]
filters = ["Armature/Skeleton3D:mixamorig_Head", "Armature/Skeleton3D:mixamorig_LeftArm", "Armature/Skeleton3D:mixamorig_LeftForeArm", "Armature/Skeleton3D:mixamorig_LeftHand", "Armature/Skeleton3D:mixamorig_LeftLeg", "Armature/Skeleton3D:mixamorig_LeftShoulder", "Armature/Skeleton3D:mixamorig_LeftUpLeg", "Armature/Skeleton3D:mixamorig_Neck", "Armature/Skeleton3D:mixamorig_RightArm", "Armature/Skeleton3D:mixamorig_RightForeArm", "Armature/Skeleton3D:mixamorig_RightHand", "Armature/Skeleton3D:mixamorig_RightShoulder", "Armature/Skeleton3D:mixamorig_Spine", "Armature/Skeleton3D:mixamorig_Spine1", "Armature/Skeleton3D:mixamorig_Spine2"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d5rgd"]
animation = &"WALK"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_ash6f"]
graph_offset = Vector2(-539.973, -39.0424)
nodes/Animation/node = SubResource("AnimationNodeAnimation_3tpsw")
nodes/Animation/position = Vector2(-140, 200)
nodes/JUMP/node = SubResource("AnimationNodeOneShot_2p8e8")
nodes/JUMP/position = Vector2(80, 60)
nodes/RUN/node = SubResource("AnimationNodeBlendSpace1D_8jiba")
nodes/RUN/position = Vector2(-340, 0)
nodes/WALK/node = SubResource("AnimationNodeBlend2_mh6d1")
nodes/WALK/position = Vector2(-160, 20)
nodes/animation/node = SubResource("AnimationNodeAnimation_d5rgd")
nodes/animation/position = Vector2(-340, 120)
nodes/output/position = Vector2(280, 60)
node_connections = [&"output", 0, &"JUMP", &"JUMP", 0, &"WALK", &"JUMP", 1, &"Animation", &"WALK", 0, &"RUN", &"WALK", 1, &"animation"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_15mpe"]
radius = 0.784521
height = 3.49475

[node name="Warrior" groups=["Player"] instance=ExtResource("1_8vmdt")]
wall_min_slide_angle = 0.436332
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.872665
script = SubResource("GDScript_kyy2f")

[node name="Skeleton3D" parent="Armature" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(0.0357416, 1.83618, -0.0393257)
bones/0/rotation = Quaternion(-0.0391784, -0.366031, -0.0144708, 0.929665)
bones/1/rotation = Quaternion(0.0335985, 0.0404785, -0.00757996, 0.998587)
bones/2/rotation = Quaternion(0.0956507, 0.0808272, -0.0149154, 0.992016)
bones/3/rotation = Quaternion(0.0957079, 0.0808535, -0.0149298, 0.992008)
bones/4/rotation = Quaternion(-0.00865701, -0.0103701, 0.00164243, 0.999907)
bones/5/rotation = Quaternion(-0.070753, 0.178427, -0.0039118, 0.981398)
bones/7/rotation = Quaternion(-0.567356, -0.43349, 0.567934, -0.409445)
bones/8/rotation = Quaternion(0.420062, -0.0131065, 0.0895946, 0.902967)
bones/9/rotation = Quaternion(-3.18922e-05, 1.19336e-05, 0.417779, 0.908549)
bones/10/rotation = Quaternion(-0.0270381, 0.0271748, -0.00249024, 0.999262)
bones/11/rotation = Quaternion(0.616896, -0.392136, 0.53044, 0.429305)
bones/12/rotation = Quaternion(0.44588, 0.0398601, 0.161586, 0.879484)
bones/13/rotation = Quaternion(-2.3738e-05, -1.08363e-05, -0.369473, 0.929241)
bones/14/rotation = Quaternion(0.0104238, 0.0104337, 0.000401789, 0.999891)
bones/15/rotation = Quaternion(0.0271948, 0.213758, 0.970931, -0.104221)
bones/16/rotation = Quaternion(-0.325066, 8.99404e-06, 3.97543e-06, 0.945691)
bones/17/rotation = Quaternion(0.471816, 0.0738654, -0.0260837, 0.87821)
bones/17/scale = Vector3(0.999986, 1, 1)
bones/18/rotation = Quaternion(0.356104, -0.0820284, 0.0138332, 0.930736)
bones/20/rotation = Quaternion(-0.156006, -0.0182995, 0.977373, 0.141669)
bones/21/rotation = Quaternion(-0.288941, -3.69705e-06, -1.10828e-06, 0.957347)
bones/22/rotation = Quaternion(0.604189, 0.0741493, 0.0226071, 0.793062)
bones/23/rotation = Quaternion(0.340803, 0.106454, -0.0381934, 0.933307)
bones/26/position = Vector3(0.0361331, 1.83618, -0.0389663)
bones/26/rotation = Quaternion(-0.0391056, -0.370675, -0.0146665, 0.927823)
bones/27/rotation = Quaternion(1, -5.03266e-10, -3.05229e-08, 1.15286e-09)
bones/28/rotation = Quaternion(1, 9.26117e-10, -8.2604e-08, 9.27627e-10)
bones/29/rotation = Quaternion(0.104209, 0.970919, -0.213818, 0.0271743)
bones/30/rotation = Quaternion(-0.325066, 1.01342e-05, 3.9911e-06, 0.945691)
bones/36/rotation = Quaternion(-0.1417, 0.977359, 0.0183083, -0.156062)
bones/37/rotation = Quaternion(-0.288941, -3.29495e-06, -1.14382e-06, 0.957347)
bones/43/rotation = Quaternion(0.0335985, 0.0404785, -0.00757996, 0.998587)
bones/44/rotation = Quaternion(0.0956507, 0.0808272, -0.0149154, 0.992016)
bones/45/rotation = Quaternion(0.0957079, 0.0808535, -0.0149298, 0.992008)
bones/46/rotation = Quaternion(-0.00865701, -0.0103701, 0.00164243, 0.999907)
bones/47/rotation = Quaternion(-0.070753, 0.178427, -0.0039118, 0.981398)
bones/48/rotation = Quaternion(-0.567356, -0.43349, 0.567934, -0.409445)
bones/49/rotation = Quaternion(0.420053, -0.0130987, 0.0895962, 0.902971)
bones/50/rotation = Quaternion(-5.02228e-07, -8.94346e-07, 0.417779, 0.908549)
bones/51/position = Vector3(0.333295, 0.18635, -0.00781517)
bones/54/rotation = Quaternion(0.616896, -0.392136, 0.53044, 0.429305)
bones/55/rotation = Quaternion(0.445881, 0.0398574, 0.161591, 0.879483)
bones/56/rotation = Quaternion(4.42411e-07, -1.30252e-06, -0.369475, 0.929241)
bones/57/position = Vector3(-0.329194, 0.178264, 0.0250335)
bones/60/position = Vector3(0.939524, 1.86679, -0.262006)
bones/60/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/61/position = Vector3(0.54875, 1.69662, 0.504373)
bones/61/rotation = Quaternion(0.84943, -0.145241, -0.40345, 0.307575)
bones/62/position = Vector3(-0.202653, 2.17335, -0.993478)
bones/62/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/63/position = Vector3(-0.584957, 1.67824, -0.375235)
bones/63/rotation = Quaternion(0.586738, -0.090468, 0.789531, 0.155547)
bones/64/position = Vector3(0.216394, 0.263926, 0.574263)
bones/64/rotation = Quaternion(-0.216075, 0.673131, 0.672973, 0.217516)
bones/65/position = Vector3(-5.28661e-06, 4.54841e-06, -2.55683e-05)
bones/65/rotation = Quaternion(-0.355222, 0.11786, -0.0452437, 0.926218)
bones/67/rotation = Quaternion(0.333282, -0.0980652, 0.0348851, 0.937064)
bones/68/position = Vector3(1.0044e-07, -1.57908e-05, 1.28874e-05)
bones/68/rotation = Quaternion(0.0219917, 0.00659497, -0.0270929, 0.999369)
bones/78/rotation = Quaternion(0.0220363, 0.0065953, -0.0270887, 0.999368)
bones/80/position = Vector3(-0.420852, 1.15892, 1.15676)
bones/80/rotation = Quaternion(-0.707107, 1.75038e-06, 3.72785e-06, 0.707107)
bones/81/position = Vector3(-0.11078, 0.263015, -0.629484)
bones/81/rotation = Quaternion(-0.454832, 0.541087, 0.540999, 0.455712)
bones/82/position = Vector3(5.43469e-06, -3.00349e-06, -1.69805e-05)
bones/82/rotation = Quaternion(-0.348866, -0.116619, 0.043825, 0.928855)
bones/84/rotation = Quaternion(0.326543, 0.100462, -0.0349361, 0.939179)
bones/85/position = Vector3(-5.193e-08, -7.16637e-06, 5.6567e-06)
bones/85/rotation = Quaternion(0.0154631, 0.00564797, -0.00379641, 0.999857)
bones/95/rotation = Quaternion(0.0155091, 0.00559495, -0.00372803, 0.999857)
bones/97/position = Vector3(-1.03755, 0.764849, 0.0014015)
bones/97/rotation = Quaternion(-0.707107, 1.06125e-06, 3.70159e-07, 0.707107)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.94185, -0.107968, -0.318215, -0.0179428, 0.929467, -0.368469, 0.335553, 0.352752, 0.873482, 0.0407353, 2.52888, -0.010146)
bone_name = "mixamorig_Spine2"
bone_idx = 3

[node name="Heavy_sword" parent="Armature/Skeleton3D/BoneAttachment3D" index="0" instance=ExtResource("2_y88qg")]
transform = Transform3D(-0.0433304, 0.202715, 0.668602, 0.0282428, -0.668831, 0.204615, 0.698087, 0.0396417, 0.0332219, -0.254506, 0.792596, -0.303512)

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "IDLE"

[node name="SpringArmPivot" type="Node3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.82446, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
spring_length = 5.0

[node name="Camera3D" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = SubResource("AnimationNodeBlendTree_ash6f")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/JUMP/active = false
parameters/RUN/blend_position = 0.00103093
parameters/WALK/blend_amount = 0.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="4"]
transform = Transform3D(0.999993, 0.00371281, -6.30021e-05, -0.00371207, 0.999953, 0.00897032, 9.63509e-05, -0.00897014, 0.99996, -0.000611633, 1.76726, 0.00839959)
shape = SubResource("CapsuleShape3D_15mpe")
