[gd_scene load_steps=13 format=3 uid="uid://rxsvnbwdeuqf"]

[ext_resource type="PackedScene" uid="uid://bwf7gfedd78fw" path="res://GLTF/Warrior.glb" id="1_8vmdt"]
[ext_resource type="PackedScene" uid="uid://chxycsp754fpi" path="res://Scenes/heavy_sword.tscn" id="2_y88qg"]

[sub_resource type="GDScript" id="GDScript_kyy2f"]
script/source = "extends CharacterBody3D

var SPEED = 10
var RUN_SPEED = 10
var WALK_SPEED = 5
const Lerp_val = 0.15
const JUMP_VELOCITY = 11

@onready var armature = $Armature
@onready var SAP = $SpringArmPivot
@onready var SA = $SpringArmPivot/SpringArm3D
@onready var anim_tree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if event is InputEventMouseMotion:
		SAP.rotate_y(-event.relative.x * 0.005)
		SA.rotate_x(-event.relative.y * 0.005)
		SA.rotation.x = clamp(SA.rotation.x, -PI/4, PI/4)


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		anim_tree.set(\"parameters/JUMP/active\",true)

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated(Vector3.UP, SAP.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, Lerp_val)
		velocity.z = lerp(velocity.z, direction.z * SPEED, Lerp_val)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), Lerp_val)

	else:
		velocity.x = lerp(velocity.x, 0.0, Lerp_val)
		velocity.z = lerp(velocity.z, 0.0, Lerp_val)
	anim_tree.set(\"parameters/RUN/blend_position\",velocity.length() / SPEED)

	move_and_slide()
"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3tpsw"]
animation = &"JUMP"

[sub_resource type="AnimationNodeOneShot" id="AnimationNodeOneShot_2p8e8"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_v8osb"]
animation = &"IDLE"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vcy3y"]
animation = &"RUN"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_8jiba"]
blend_point_0/node = SubResource("AnimationNodeAnimation_v8osb")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_vcy3y")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_mh6d1"]
filters = ["Armature/Skeleton3D:mixamorig_Head", "Armature/Skeleton3D:mixamorig_LeftArm", "Armature/Skeleton3D:mixamorig_LeftForeArm", "Armature/Skeleton3D:mixamorig_LeftHand", "Armature/Skeleton3D:mixamorig_LeftLeg", "Armature/Skeleton3D:mixamorig_LeftShoulder", "Armature/Skeleton3D:mixamorig_LeftUpLeg", "Armature/Skeleton3D:mixamorig_Neck", "Armature/Skeleton3D:mixamorig_RightArm", "Armature/Skeleton3D:mixamorig_RightForeArm", "Armature/Skeleton3D:mixamorig_RightHand", "Armature/Skeleton3D:mixamorig_RightShoulder", "Armature/Skeleton3D:mixamorig_Spine", "Armature/Skeleton3D:mixamorig_Spine1", "Armature/Skeleton3D:mixamorig_Spine2"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d5rgd"]
animation = &"WALK"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_ash6f"]
graph_offset = Vector2(-539.973, -39.0424)
nodes/Animation/node = SubResource("AnimationNodeAnimation_3tpsw")
nodes/Animation/position = Vector2(-140, 200)
nodes/JUMP/node = SubResource("AnimationNodeOneShot_2p8e8")
nodes/JUMP/position = Vector2(80, 60)
nodes/RUN/node = SubResource("AnimationNodeBlendSpace1D_8jiba")
nodes/RUN/position = Vector2(-340, 0)
nodes/WALK/node = SubResource("AnimationNodeBlend2_mh6d1")
nodes/WALK/position = Vector2(-160, 20)
nodes/animation/node = SubResource("AnimationNodeAnimation_d5rgd")
nodes/animation/position = Vector2(-340, 120)
nodes/output/position = Vector2(280, 60)
node_connections = [&"output", 0, &"JUMP", &"JUMP", 0, &"WALK", &"JUMP", 1, &"Animation", &"WALK", 0, &"RUN", &"WALK", 1, &"animation"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_15mpe"]
radius = 0.784521
height = 3.49475

[node name="Warrior" groups=["Player"] instance=ExtResource("1_8vmdt")]
wall_min_slide_angle = 0.436332
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.872665
script = SubResource("GDScript_kyy2f")

[node name="Skeleton3D" parent="Armature" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(0.035722, 1.83598, -0.0395541)
bones/0/rotation = Quaternion(-0.03915, -0.366053, -0.0144498, 0.929658)
bones/1/rotation = Quaternion(0.033656, 0.040487, -0.00758932, 0.998584)
bones/2/rotation = Quaternion(0.095753, 0.0808254, -0.0149355, 0.992006)
bones/3/rotation = Quaternion(0.095803, 0.0808565, -0.0149523, 0.991998)
bones/4/rotation = Quaternion(-0.00902417, -0.0103447, 0.001642, 0.999904)
bones/5/rotation = Quaternion(-0.0706967, 0.178505, -0.00412886, 0.981387)
bones/7/rotation = Quaternion(-0.567663, -0.433135, 0.567978, -0.409334)
bones/8/rotation = Quaternion(0.419804, -0.0133873, 0.0894772, 0.903094)
bones/9/rotation = Quaternion(-3.20267e-05, 1.20378e-05, 0.417479, 0.908686)
bones/10/rotation = Quaternion(-0.0270381, 0.0271748, -0.00249024, 0.999262)
bones/11/rotation = Quaternion(0.617188, -0.391795, 0.530437, 0.4292)
bones/12/rotation = Quaternion(0.445371, 0.04056, 0.161779, 0.879674)
bones/13/rotation = Quaternion(-2.32838e-05, -1.05569e-05, -0.369306, 0.929308)
bones/14/rotation = Quaternion(0.0103877, 0.0103976, 0.000399195, 0.999892)
bones/15/rotation = Quaternion(0.0271556, 0.213965, 0.970881, -0.104268)
bones/16/rotation = Quaternion(-0.325178, 8.63397e-06, 3.94051e-06, 0.945653)
bones/17/rotation = Quaternion(0.471827, 0.0738285, -0.0261377, 0.878206)
bones/17/scale = Vector3(0.999986, 1, 1)
bones/18/rotation = Quaternion(0.356107, -0.082033, 0.0138355, 0.930735)
bones/20/rotation = Quaternion(-0.155987, -0.0180222, 0.977383, 0.141655)
bones/21/rotation = Quaternion(-0.289432, -3.90365e-06, -1.08025e-06, 0.957199)
bones/22/rotation = Quaternion(0.604378, 0.074134, 0.0225792, 0.79292)
bones/23/rotation = Quaternion(0.340805, 0.106459, -0.0381955, 0.933306)
bones/26/position = Vector3(0.0361158, 1.83598, -0.0391949)
bones/26/rotation = Quaternion(-0.0390772, -0.370696, -0.0146454, 0.927816)
bones/27/rotation = Quaternion(1, -1.02921e-10, -3.27653e-08, 1.43162e-09)
bones/28/rotation = Quaternion(1, 8.73928e-10, -8.21535e-08, 9.2763e-10)
bones/29/rotation = Quaternion(0.104268, 0.970874, -0.213998, 0.0271505)
bones/30/rotation = Quaternion(-0.325178, 1.01357e-05, 3.99172e-06, 0.945653)
bones/36/rotation = Quaternion(-0.141674, 0.977375, 0.0180279, -0.156021)
bones/37/rotation = Quaternion(-0.289432, -3.30095e-06, -1.1436e-06, 0.957199)
bones/43/rotation = Quaternion(0.033656, 0.0404869, -0.00758932, 0.998584)
bones/44/rotation = Quaternion(0.095753, 0.0808254, -0.0149355, 0.992006)
bones/45/rotation = Quaternion(0.095803, 0.0808565, -0.0149523, 0.991998)
bones/46/rotation = Quaternion(-0.00902417, -0.0103447, 0.001642, 0.999904)
bones/47/rotation = Quaternion(-0.0706967, 0.178505, -0.00412886, 0.981387)
bones/48/rotation = Quaternion(-0.567663, -0.433135, 0.567978, -0.409334)
bones/49/rotation = Quaternion(0.419783, -0.0133694, 0.0894821, 0.903104)
bones/50/rotation = Quaternion(-5.02431e-07, -8.92882e-07, 0.41748, 0.908686)
bones/51/position = Vector3(0.333243, 0.18617, -0.00770843)
bones/54/rotation = Quaternion(0.617188, -0.391795, 0.530437, 0.4292)
bones/55/rotation = Quaternion(0.445372, 0.0405573, 0.161783, 0.879673)
bones/56/rotation = Quaternion(4.43204e-07, -1.30603e-06, -0.36931, 0.929306)
bones/57/position = Vector3(-0.32912, 0.17809, 0.0251409)
bones/60/position = Vector3(0.939283, 1.86678, -0.262591)
bones/60/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/61/position = Vector3(0.548803, 1.69586, 0.503808)
bones/61/rotation = Quaternion(0.849512, -0.144884, -0.403618, 0.307296)
bones/62/position = Vector3(-0.202558, 2.17314, -0.993513)
bones/62/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/63/position = Vector3(-0.585425, 1.67792, -0.375694)
bones/63/rotation = Quaternion(0.586559, -0.0908541, 0.789612, 0.155587)
bones/64/position = Vector3(0.21639, 0.263977, 0.574293)
bones/64/rotation = Quaternion(-0.21608, 0.673104, 0.673004, 0.2175)
bones/65/position = Vector3(-5.28661e-06, 4.54841e-06, -2.55683e-05)
bones/65/rotation = Quaternion(-0.355222, 0.11786, -0.0452437, 0.926218)
bones/67/rotation = Quaternion(0.333282, -0.0980652, 0.0348851, 0.937064)
bones/68/position = Vector3(1.0044e-07, -1.57908e-05, 1.28874e-05)
bones/68/rotation = Quaternion(0.0219952, 0.0065911, -0.0270894, 0.999369)
bones/78/rotation = Quaternion(0.02204, 0.00659144, -0.0270853, 0.999368)
bones/80/position = Vector3(-0.420988, 1.15896, 1.15669)
bones/80/rotation = Quaternion(-0.707107, 1.75038e-06, 3.72785e-06, 0.707107)
bones/81/position = Vector3(-0.110775, 0.262996, -0.629493)
bones/81/rotation = Quaternion(-0.454845, 0.541075, 0.540994, 0.455718)
bones/82/position = Vector3(5.43469e-06, -3.00349e-06, -1.69805e-05)
bones/82/rotation = Quaternion(-0.348866, -0.116619, 0.043825, 0.928855)
bones/84/rotation = Quaternion(0.326543, 0.100462, -0.0349361, 0.939179)
bones/85/position = Vector3(-5.193e-08, -7.16637e-06, 5.6567e-06)
bones/85/rotation = Quaternion(0.0154652, 0.00565276, -0.00380017, 0.999857)
bones/95/rotation = Quaternion(0.0155114, 0.00559931, -0.00373128, 0.999857)
bones/97/position = Vector3(-1.03794, 0.764641, 0.00145834)
bones/97/rotation = Quaternion(-0.707107, 1.06125e-06, 3.70159e-07, 0.707107)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.941847, -0.108202, -0.318144, -0.0178889, 0.929256, -0.369001, 0.335564, 0.353234, 0.873282, 0.0406214, 2.52867, -0.010249)
bone_name = "mixamorig_Spine2"
bone_idx = 3

[node name="Heavy_sword" parent="Armature/Skeleton3D/BoneAttachment3D" index="0" instance=ExtResource("2_y88qg")]
transform = Transform3D(-0.0433304, 0.202715, 0.668602, 0.0282428, -0.668831, 0.204615, 0.698087, 0.0396417, 0.0332219, -0.254506, 0.792596, -0.303512)

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "IDLE"

[node name="SpringArmPivot" type="Node3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.82446, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
spring_length = 5.0

[node name="Camera3D" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = SubResource("AnimationNodeBlendTree_ash6f")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/JUMP/active = false
parameters/RUN/blend_position = 0.00103093
parameters/WALK/blend_amount = 0.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="4"]
transform = Transform3D(0.999993, 0.00371281, -6.30021e-05, -0.00371207, 0.999953, 0.00897032, 9.63509e-05, -0.00897014, 0.99996, -0.000611633, 1.76726, 0.00839959)
shape = SubResource("CapsuleShape3D_15mpe")
