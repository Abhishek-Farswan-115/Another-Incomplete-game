[gd_scene load_steps=13 format=3 uid="uid://rxsvnbwdeuqf"]

[ext_resource type="PackedScene" uid="uid://bwf7gfedd78fw" path="res://GLTF/Warrior.glb" id="1_8vmdt"]
[ext_resource type="PackedScene" uid="uid://chxycsp754fpi" path="res://Scenes/heavy_sword.tscn" id="2_y88qg"]

[sub_resource type="GDScript" id="GDScript_kyy2f"]
script/source = "extends CharacterBody3D

var SPEED = 10
var RUN_SPEED = 10
var WALK_SPEED = 5
const Lerp_val = 0.15
const JUMP_VELOCITY = 11

@onready var armature = $Armature
@onready var SAP = $SpringArmPivot
@onready var SA = $SpringArmPivot/SpringArm3D
@onready var anim_tree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if event is InputEventMouseMotion:
		SAP.rotate_y(-event.relative.x * 0.005)
		SA.rotate_x(-event.relative.y * 0.005)
		SA.rotation.x = clamp(SA.rotation.x, -PI/4, PI/4)


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		anim_tree.set(\"parameters/JUMP/active\",true)

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated(Vector3.UP, SAP.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, Lerp_val)
		velocity.z = lerp(velocity.z, direction.z * SPEED, Lerp_val)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), Lerp_val)

	else:
		velocity.x = lerp(velocity.x, 0.0, Lerp_val)
		velocity.z = lerp(velocity.z, 0.0, Lerp_val)
	anim_tree.set(\"parameters/RUN/blend_position\",velocity.length() / SPEED)

	move_and_slide()
"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3tpsw"]
animation = &"JUMP"

[sub_resource type="AnimationNodeOneShot" id="AnimationNodeOneShot_2p8e8"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_v8osb"]
animation = &"IDLE"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vcy3y"]
animation = &"RUN"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_8jiba"]
blend_point_0/node = SubResource("AnimationNodeAnimation_v8osb")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_vcy3y")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_mh6d1"]
filters = ["Armature/Skeleton3D:mixamorig_Head", "Armature/Skeleton3D:mixamorig_LeftArm", "Armature/Skeleton3D:mixamorig_LeftForeArm", "Armature/Skeleton3D:mixamorig_LeftHand", "Armature/Skeleton3D:mixamorig_LeftLeg", "Armature/Skeleton3D:mixamorig_LeftShoulder", "Armature/Skeleton3D:mixamorig_LeftUpLeg", "Armature/Skeleton3D:mixamorig_Neck", "Armature/Skeleton3D:mixamorig_RightArm", "Armature/Skeleton3D:mixamorig_RightForeArm", "Armature/Skeleton3D:mixamorig_RightHand", "Armature/Skeleton3D:mixamorig_RightShoulder", "Armature/Skeleton3D:mixamorig_Spine", "Armature/Skeleton3D:mixamorig_Spine1", "Armature/Skeleton3D:mixamorig_Spine2"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d5rgd"]
animation = &"WALK"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_ash6f"]
graph_offset = Vector2(-539.973, -39.0424)
nodes/Animation/node = SubResource("AnimationNodeAnimation_3tpsw")
nodes/Animation/position = Vector2(-140, 200)
nodes/JUMP/node = SubResource("AnimationNodeOneShot_2p8e8")
nodes/JUMP/position = Vector2(80, 60)
nodes/RUN/node = SubResource("AnimationNodeBlendSpace1D_8jiba")
nodes/RUN/position = Vector2(-340, 0)
nodes/WALK/node = SubResource("AnimationNodeBlend2_mh6d1")
nodes/WALK/position = Vector2(-160, 20)
nodes/animation/node = SubResource("AnimationNodeAnimation_d5rgd")
nodes/animation/position = Vector2(-340, 120)
nodes/output/position = Vector2(280, 60)
node_connections = [&"output", 0, &"JUMP", &"JUMP", 0, &"WALK", &"JUMP", 1, &"Animation", &"WALK", 0, &"RUN", &"WALK", 1, &"animation"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_15mpe"]
radius = 0.784521
height = 3.49475

[node name="Warrior" groups=["Player"] instance=ExtResource("1_8vmdt")]
wall_min_slide_angle = 0.436332
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.872665
script = SubResource("GDScript_kyy2f")

[node name="Skeleton3D" parent="Armature" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(0.03671, 1.83836, -0.0342506)
bones/0/rotation = Quaternion(-0.0403248, -0.365714, -0.014676, 0.929737)
bones/1/rotation = Quaternion(0.0317459, 0.0407256, -0.00724296, 0.99864)
bones/2/rotation = Quaternion(0.0922826, 0.0807361, -0.0140696, 0.992355)
bones/3/rotation = Quaternion(0.0926624, 0.0807331, -0.0141364, 0.992319)
bones/4/rotation = Quaternion(-0.000846987, -0.010651, 0.00142923, 0.999942)
bones/5/rotation = Quaternion(-0.0619616, 0.177027, -0.00160222, 0.982252)
bones/7/rotation = Quaternion(-0.555073, -0.447433, 0.565775, -0.414242)
bones/8/rotation = Quaternion(0.425984, -0.00792441, 0.0900915, 0.900199)
bones/9/rotation = Quaternion(-1.0136e-05, 1.39998e-06, 0.4199, 0.907571)
bones/10/rotation = Quaternion(-0.027029, 0.0271657, -0.00248982, 0.999262)
bones/11/rotation = Quaternion(0.604237, -0.406713, 0.529165, 0.435278)
bones/12/rotation = Quaternion(0.457125, 0.0250217, 0.155867, 0.87528)
bones/13/rotation = Quaternion(-1.38986e-05, -5.70253e-06, -0.371309, 0.928509)
bones/14/rotation = Quaternion(0.0109657, 0.0109769, 0.000442424, 0.99988)
bones/15/rotation = Quaternion(0.0271206, 0.211644, 0.971569, -0.10259)
bones/16/rotation = Quaternion(-0.323634, 7.73666e-06, 3.79198e-06, 0.946182)
bones/17/rotation = Quaternion(0.471834, 0.0742084, -0.0247022, 0.878212)
bones/17/scale = Vector3(0.999986, 1, 1)
bones/18/rotation = Quaternion(0.356027, -0.0818039, 0.0137906, 0.930786)
bones/20/rotation = Quaternion(-0.156859, -0.0241298, 0.976951, 0.14276)
bones/21/rotation = Quaternion(-0.280762, -3.28129e-06, -1.12028e-06, 0.959777)
bones/22/rotation = Quaternion(0.600736, 0.0744389, 0.0236554, 0.795623)
bones/23/rotation = Quaternion(0.340878, 0.106214, -0.038121, 0.93331)
bones/26/position = Vector3(0.0370506, 1.83836, -0.0338818)
bones/26/rotation = Quaternion(-0.0402509, -0.370358, -0.0148775, 0.927897)
bones/27/rotation = Quaternion(1, 1.06484e-09, -4.6457e-08, -3.38648e-10)
bones/28/rotation = Quaternion(1, 3.02031e-11, -7.83408e-08, -7.57389e-12)
bones/29/rotation = Quaternion(0.102371, 0.971662, -0.211315, 0.0271893)
bones/30/rotation = Quaternion(-0.323634, 1.01292e-05, 3.98481e-06, 0.946182)
bones/36/rotation = Quaternion(-0.142761, 0.976951, 0.0241302, -0.156859)
bones/37/rotation = Quaternion(-0.280762, -3.317e-06, -1.10756e-06, 0.959777)
bones/43/rotation = Quaternion(0.0317459, 0.0407255, -0.00724295, 0.99864)
bones/44/rotation = Quaternion(0.0922826, 0.0807361, -0.0140696, 0.992355)
bones/45/rotation = Quaternion(0.0926624, 0.0807331, -0.0141364, 0.992319)
bones/46/rotation = Quaternion(-0.000846987, -0.010651, 0.00142923, 0.999942)
bones/47/rotation = Quaternion(-0.0619616, 0.177027, -0.00160222, 0.982252)
bones/48/rotation = Quaternion(-0.555073, -0.447433, 0.565775, -0.414242)
bones/49/rotation = Quaternion(0.425986, -0.00792623, 0.090087, 0.900199)
bones/50/rotation = Quaternion(-4.91484e-07, -9.01645e-07, 0.4199, 0.90757)
bones/51/position = Vector3(0.33506, 0.193009, -0.011543)
bones/54/rotation = Quaternion(0.604237, -0.406713, 0.529165, 0.435278)
bones/55/rotation = Quaternion(0.457127, 0.0250164, 0.155865, 0.87528)
bones/56/rotation = Quaternion(4.25665e-07, -1.31748e-06, -0.371309, 0.928509)
bones/57/position = Vector3(-0.332094, 0.185762, 0.0209658)
bones/60/position = Vector3(0.960291, 1.87855, -0.250114)
bones/60/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/61/position = Vector3(0.571405, 1.72208, 0.521114)
bones/61/rotation = Quaternion(0.846512, -0.144134, -0.399768, 0.320668)
bones/62/position = Vector3(-0.213483, 2.17614, -0.993381)
bones/62/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/63/position = Vector3(-0.593271, 1.69222, -0.366353)
bones/63/rotation = Quaternion(0.589076, -0.0862938, 0.78677, 0.162897)
bones/64/position = Vector3(0.216556, 0.263825, 0.575731)
bones/64/rotation = Quaternion(-0.216079, 0.673489, 0.672507, 0.217848)
bones/65/position = Vector3(-5.28661e-06, 4.54841e-06, -2.55683e-05)
bones/65/rotation = Quaternion(-0.355222, 0.11786, -0.0452437, 0.926218)
bones/67/rotation = Quaternion(0.333282, -0.0980652, 0.0348851, 0.937064)
bones/68/position = Vector3(1.0044e-07, -1.57908e-05, 1.28874e-05)
bones/68/rotation = Quaternion(0.0219069, 0.00679889, -0.0272016, 0.999367)
bones/78/rotation = Quaternion(0.0219506, 0.00679919, -0.0271973, 0.999366)
bones/80/position = Vector3(-0.419188, 1.15883, 1.16046)
bones/80/rotation = Quaternion(-0.707107, 1.75038e-06, 3.72785e-06, 0.707107)
bones/81/position = Vector3(-0.110731, 0.263025, -0.63121)
bones/81/rotation = Quaternion(-0.455098, 0.54059, 0.541398, 0.455562)
bones/82/position = Vector3(5.43469e-06, -3.00349e-06, -1.69805e-05)
bones/82/rotation = Quaternion(-0.348866, -0.116619, 0.043825, 0.928855)
bones/84/rotation = Quaternion(0.326543, 0.100462, -0.0349361, 0.939179)
bones/85/position = Vector3(-5.193e-08, -7.16637e-06, 5.6567e-06)
bones/85/rotation = Quaternion(0.0155221, 0.00544951, -0.00363985, 0.999858)
bones/95/rotation = Quaternion(0.0155599, 0.00541509, -0.00359366, 0.999858)
bones/97/position = Vector3(-1.03166, 0.765824, 0.000114987)
bones/97/rotation = Quaternion(-0.707107, 1.06125e-06, 3.70159e-07, 0.707107)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.941921, -0.101502, -0.320129, -0.0182475, 0.936356, -0.350576, 0.335339, 0.336057, 0.880121, 0.0441707, 2.53159, -0.00975294)
bone_name = "mixamorig_Spine2"
bone_idx = 3

[node name="Heavy_sword" parent="Armature/Skeleton3D/BoneAttachment3D" index="0" instance=ExtResource("2_y88qg")]
transform = Transform3D(-0.0433304, 0.202715, 0.668602, 0.0282428, -0.668831, 0.204615, 0.698087, 0.0396417, 0.0332219, -0.254506, 0.792596, -0.303512)

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "IDLE"

[node name="SpringArmPivot" type="Node3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.82446, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
spring_length = 5.0

[node name="Camera3D" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = SubResource("AnimationNodeBlendTree_ash6f")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/JUMP/active = false
parameters/RUN/blend_position = 0.00103093
parameters/WALK/blend_amount = 0.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="4"]
transform = Transform3D(0.999993, 0.00371281, -6.30021e-05, -0.00371207, 0.999953, 0.00897032, 9.63509e-05, -0.00897014, 0.99996, -0.000611633, 1.76726, 0.00839959)
shape = SubResource("CapsuleShape3D_15mpe")
