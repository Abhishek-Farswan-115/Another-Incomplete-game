[gd_scene load_steps=13 format=3 uid="uid://rxsvnbwdeuqf"]

[ext_resource type="PackedScene" uid="uid://bwf7gfedd78fw" path="res://GLTF/Warrior.glb" id="1_8vmdt"]
[ext_resource type="PackedScene" uid="uid://chxycsp754fpi" path="res://Scenes/heavy_sword.tscn" id="2_y88qg"]

[sub_resource type="GDScript" id="GDScript_kyy2f"]
script/source = "extends CharacterBody3D

var SPEED = 10
var RUN_SPEED = 10
var WALK_SPEED = 5
const Lerp_val = 0.15
const JUMP_VELOCITY = 11

@onready var armature = $Armature
@onready var SAP = $SpringArmPivot
@onready var SA = $SpringArmPivot/SpringArm3D
@onready var anim_tree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if event is InputEventMouseMotion:
		SAP.rotate_y(-event.relative.x * 0.005)
		SA.rotate_x(-event.relative.y * 0.005)
		SA.rotation.x = clamp(SA.rotation.x, -PI/4, PI/4)


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		anim_tree.set(\"parameters/JUMP/active\",true)

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated(Vector3.UP, SAP.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, Lerp_val)
		velocity.z = lerp(velocity.z, direction.z * SPEED, Lerp_val)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), Lerp_val)

	else:
		velocity.x = lerp(velocity.x, 0.0, Lerp_val)
		velocity.z = lerp(velocity.z, 0.0, Lerp_val)
	anim_tree.set(\"parameters/RUN/blend_position\",velocity.length() / SPEED)

	move_and_slide()
"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3tpsw"]
animation = &"JUMP"

[sub_resource type="AnimationNodeOneShot" id="AnimationNodeOneShot_2p8e8"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_v8osb"]
animation = &"IDLE"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vcy3y"]
animation = &"RUN"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_8jiba"]
blend_point_0/node = SubResource("AnimationNodeAnimation_v8osb")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_vcy3y")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_mh6d1"]
filters = ["Armature/Skeleton3D:mixamorig_Head", "Armature/Skeleton3D:mixamorig_LeftArm", "Armature/Skeleton3D:mixamorig_LeftForeArm", "Armature/Skeleton3D:mixamorig_LeftHand", "Armature/Skeleton3D:mixamorig_LeftLeg", "Armature/Skeleton3D:mixamorig_LeftShoulder", "Armature/Skeleton3D:mixamorig_LeftUpLeg", "Armature/Skeleton3D:mixamorig_Neck", "Armature/Skeleton3D:mixamorig_RightArm", "Armature/Skeleton3D:mixamorig_RightForeArm", "Armature/Skeleton3D:mixamorig_RightHand", "Armature/Skeleton3D:mixamorig_RightShoulder", "Armature/Skeleton3D:mixamorig_Spine", "Armature/Skeleton3D:mixamorig_Spine1", "Armature/Skeleton3D:mixamorig_Spine2"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d5rgd"]
animation = &"WALK"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_ash6f"]
graph_offset = Vector2(-539.973, -39.0424)
nodes/Animation/node = SubResource("AnimationNodeAnimation_3tpsw")
nodes/Animation/position = Vector2(-140, 200)
nodes/JUMP/node = SubResource("AnimationNodeOneShot_2p8e8")
nodes/JUMP/position = Vector2(80, 60)
nodes/RUN/node = SubResource("AnimationNodeBlendSpace1D_8jiba")
nodes/RUN/position = Vector2(-340, 0)
nodes/WALK/node = SubResource("AnimationNodeBlend2_mh6d1")
nodes/WALK/position = Vector2(-160, 20)
nodes/animation/node = SubResource("AnimationNodeAnimation_d5rgd")
nodes/animation/position = Vector2(-340, 120)
nodes/output/position = Vector2(280, 60)
node_connections = [&"output", 0, &"JUMP", &"JUMP", 0, &"WALK", &"JUMP", 1, &"Animation", &"WALK", 0, &"RUN", &"WALK", 1, &"animation"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_15mpe"]
radius = 0.784521
height = 3.49475

[node name="Warrior" groups=["Player"] instance=ExtResource("1_8vmdt")]
wall_min_slide_angle = 0.436332
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.872665
script = SubResource("GDScript_kyy2f")

[node name="Skeleton3D" parent="Armature" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(0.0371346, 1.83719, -0.0381058)
bones/0/rotation = Quaternion(-0.0401028, -0.365814, -0.0146289, 0.929708)
bones/1/rotation = Quaternion(0.0324279, 0.0405664, -0.00717611, 0.998625)
bones/2/rotation = Quaternion(0.0932135, 0.0807261, -0.014175, 0.992267)
bones/3/rotation = Quaternion(0.093254, 0.0806993, -0.0141969, 0.992265)
bones/4/rotation = Quaternion(-0.00031742, -0.0107108, 0.00138715, 0.999942)
bones/5/rotation = Quaternion(-0.0478502, 0.176764, -0.00413312, 0.983081)
bones/7/rotation = Quaternion(-0.557431, -0.444937, 0.565582, -0.414028)
bones/8/rotation = Quaternion(0.424664, -0.00919292, 0.0899843, 0.900821)
bones/9/rotation = Quaternion(-2.11446e-05, 5.72612e-06, 0.419479, 0.907765)
bones/10/rotation = Quaternion(-0.0270337, 0.0271704, -0.00249001, 0.999262)
bones/11/rotation = Quaternion(0.606017, -0.404775, 0.528976, 0.434839)
bones/12/rotation = Quaternion(0.454599, 0.0297512, 0.156883, 0.876266)
bones/13/rotation = Quaternion(-1.98139e-05, -8.5597e-06, -0.371073, 0.928604)
bones/14/rotation = Quaternion(0.0111667, 0.0111784, 0.000458061, 0.999875)
bones/15/rotation = Quaternion(0.0269598, 0.212224, 0.97135, -0.103503)
bones/16/rotation = Quaternion(-0.323486, 5.46261e-06, 2.96909e-06, 0.946233)
bones/17/rotation = Quaternion(0.471074, 0.0737438, -0.0254398, 0.878637)
bones/17/scale = Vector3(0.999986, 1, 1)
bones/18/rotation = Quaternion(0.355942, -0.0816223, 0.0139139, 0.930833)
bones/20/rotation = Quaternion(-0.156413, -0.020977, 0.97719, 0.142109)
bones/21/rotation = Quaternion(-0.285915, -2.1514e-06, -1.10966e-06, 0.958255)
bones/22/rotation = Quaternion(0.60257, 0.0740671, 0.0227827, 0.794295)
bones/23/rotation = Quaternion(0.340581, 0.106103, -0.0380568, 0.933434)
bones/26/position = Vector3(0.0375138, 1.83719, -0.0377325)
bones/26/rotation = Quaternion(-0.0400291, -0.370458, -0.0148292, 0.927868)
bones/27/rotation = Quaternion(1, -6.409e-10, -4.3683e-08, 1.63593e-09)
bones/28/rotation = Quaternion(1, 1.46488e-10, -8.16204e-08, -1.63049e-10)
bones/29/rotation = Quaternion(0.103498, 0.971356, -0.212202, 0.0269559)
bones/30/rotation = Quaternion(-0.323486, 1.01443e-05, 3.98244e-06, 0.946233)
bones/36/rotation = Quaternion(-0.142108, 0.97719, 0.020978, -0.156413)
bones/37/rotation = Quaternion(-0.285913, -3.30221e-06, -1.11314e-06, 0.958256)
bones/43/rotation = Quaternion(0.0324279, 0.0405664, -0.00717611, 0.998625)
bones/44/rotation = Quaternion(0.0932135, 0.0807261, -0.014175, 0.992267)
bones/45/rotation = Quaternion(0.093254, 0.0806993, -0.0141969, 0.992265)
bones/46/rotation = Quaternion(-0.00031742, -0.0107108, 0.00138715, 0.999942)
bones/47/rotation = Quaternion(-0.0478502, 0.176764, -0.00413312, 0.983081)
bones/48/rotation = Quaternion(-0.557431, -0.444937, 0.565582, -0.414028)
bones/49/rotation = Quaternion(0.424665, -0.0091939, 0.0899822, 0.900821)
bones/50/rotation = Quaternion(-4.94637e-07, -8.85012e-07, 0.419479, 0.907765)
bones/51/position = Vector3(0.334998, 0.192708, -0.0110816)
bones/54/rotation = Quaternion(0.606017, -0.404775, 0.528976, 0.434839)
bones/55/rotation = Quaternion(0.4546, 0.0297476, 0.156883, 0.876266)
bones/56/rotation = Quaternion(4.36944e-07, -1.32843e-06, -0.371074, 0.928603)
bones/57/position = Vector3(-0.331815, 0.185066, 0.0216005)
bones/60/position = Vector3(0.960339, 1.87845, -0.253811)
bones/60/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/61/position = Vector3(0.570493, 1.71586, 0.515705)
bones/61/rotation = Quaternion(0.848052, -0.142367, -0.399354, 0.317892)
bones/62/position = Vector3(-0.212348, 2.17509, -0.996675)
bones/62/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/63/position = Vector3(-0.596248, 1.69044, -0.371993)
bones/63/rotation = Quaternion(0.587588, -0.0890398, 0.78758, 0.162879)
bones/64/position = Vector3(0.216504, 0.264196, 0.574867)
bones/64/rotation = Quaternion(-0.216224, 0.672969, 0.673083, 0.217529)
bones/65/position = Vector3(-5.28661e-06, 4.54841e-06, -2.55683e-05)
bones/65/rotation = Quaternion(-0.355222, 0.11786, -0.0452437, 0.926218)
bones/67/rotation = Quaternion(0.333282, -0.0980652, 0.0348851, 0.937064)
bones/68/position = Vector3(1.0044e-07, -1.57908e-05, 1.28874e-05)
bones/68/rotation = Quaternion(0.0218291, 0.00701759, -0.02714, 0.999369)
bones/78/rotation = Quaternion(0.0218735, 0.0070179, -0.0271357, 0.999368)
bones/80/position = Vector3(-0.419676, 1.15892, 1.15712)
bones/80/rotation = Quaternion(-0.707107, 1.75038e-06, 3.72785e-06, 0.707107)
bones/81/position = Vector3(-0.110695, 0.262872, -0.630255)
bones/81/rotation = Quaternion(-0.454916, 0.540796, 0.541196, 0.455739)
bones/82/position = Vector3(5.43469e-06, -3.00349e-06, -1.69805e-05)
bones/82/rotation = Quaternion(-0.348866, -0.116619, 0.043825, 0.928855)
bones/84/rotation = Quaternion(0.326543, 0.100462, -0.0349361, 0.939179)
bones/85/position = Vector3(-5.193e-08, -7.16637e-06, 5.6567e-06)
bones/85/rotation = Quaternion(0.0151954, 0.00534439, -0.00356809, 0.999864)
bones/95/rotation = Quaternion(0.01523, 0.00531725, -0.00353062, 0.999864)
bones/97/position = Vector3(-1.03503, 0.766049, 0.000718593)
bones/97/rotation = Quaternion(-0.707107, 1.06125e-06, 3.70159e-07, 0.707107)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.941749, -0.104043, -0.319819, -0.0172903, 0.934709, -0.354993, 0.335873, 0.339844, 0.878462, 0.0436752, 2.53029, -0.0124499)
bone_name = "mixamorig_Spine2"
bone_idx = 3

[node name="Heavy_sword" parent="Armature/Skeleton3D/BoneAttachment3D" index="0" instance=ExtResource("2_y88qg")]
transform = Transform3D(-0.0433304, 0.202715, 0.668602, 0.0282428, -0.668831, 0.204615, 0.698087, 0.0396417, 0.0332219, -0.254506, 0.792596, -0.303512)

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "IDLE"

[node name="SpringArmPivot" type="Node3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.82446, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
spring_length = 5.0

[node name="Camera3D" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = SubResource("AnimationNodeBlendTree_ash6f")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/JUMP/active = false
parameters/RUN/blend_position = 0.00103093
parameters/WALK/blend_amount = 0.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="4"]
transform = Transform3D(0.999993, 0.00371281, -6.30021e-05, -0.00371207, 0.999953, 0.00897032, 9.63509e-05, -0.00897014, 0.99996, -0.000611633, 1.76726, 0.00839959)
shape = SubResource("CapsuleShape3D_15mpe")
