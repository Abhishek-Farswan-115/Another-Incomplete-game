[gd_scene load_steps=13 format=3 uid="uid://rxsvnbwdeuqf"]

[ext_resource type="PackedScene" uid="uid://bwf7gfedd78fw" path="res://GLTF/Warrior.glb" id="1_8vmdt"]
[ext_resource type="PackedScene" uid="uid://chxycsp754fpi" path="res://Scenes/heavy_sword.tscn" id="2_y88qg"]

[sub_resource type="GDScript" id="GDScript_kyy2f"]
script/source = "extends CharacterBody3D

var SPEED = 10
var RUN_SPEED = 10
var WALK_SPEED = 5
const Lerp_val = 0.15
const JUMP_VELOCITY = 11

@onready var armature = $Armature
@onready var SAP = $SpringArmPivot
@onready var SA = $SpringArmPivot/SpringArm3D
@onready var anim_tree = $AnimationTree

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/3d/default_gravity\")

func _ready():
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)


func _unhandled_input(event):
	if Input.is_action_just_pressed(\"quit\"):
		get_tree().quit()
		
	if event is InputEventMouseMotion:
		SAP.rotate_y(-event.relative.x * 0.005)
		SA.rotate_x(-event.relative.y * 0.005)
		SA.rotation.x = clamp(SA.rotation.x, -PI/4, PI/4)


func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# Handle Jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		anim_tree.set(\"parameters/JUMP/active\",true)

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	direction = direction.rotated(Vector3.UP, SAP.rotation.y)
	if direction:
		velocity.x = lerp(velocity.x, direction.x * SPEED, Lerp_val)
		velocity.z = lerp(velocity.z, direction.z * SPEED, Lerp_val)
		armature.rotation.y = lerp_angle(armature.rotation.y, atan2(-velocity.x, -velocity.z), Lerp_val)

	else:
		velocity.x = lerp(velocity.x, 0.0, Lerp_val)
		velocity.z = lerp(velocity.z, 0.0, Lerp_val)
	anim_tree.set(\"parameters/RUN/blend_position\",velocity.length() / SPEED)

	move_and_slide()
"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_3tpsw"]
animation = &"JUMP"

[sub_resource type="AnimationNodeOneShot" id="AnimationNodeOneShot_2p8e8"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_v8osb"]
animation = &"IDLE"

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_vcy3y"]
animation = &"RUN"

[sub_resource type="AnimationNodeBlendSpace1D" id="AnimationNodeBlendSpace1D_8jiba"]
blend_point_0/node = SubResource("AnimationNodeAnimation_v8osb")
blend_point_0/pos = 0.0
blend_point_1/node = SubResource("AnimationNodeAnimation_vcy3y")
blend_point_1/pos = 1.0
min_space = 0.0

[sub_resource type="AnimationNodeBlend2" id="AnimationNodeBlend2_mh6d1"]
filters = ["Armature/Skeleton3D:mixamorig_Head", "Armature/Skeleton3D:mixamorig_LeftArm", "Armature/Skeleton3D:mixamorig_LeftForeArm", "Armature/Skeleton3D:mixamorig_LeftHand", "Armature/Skeleton3D:mixamorig_LeftLeg", "Armature/Skeleton3D:mixamorig_LeftShoulder", "Armature/Skeleton3D:mixamorig_LeftUpLeg", "Armature/Skeleton3D:mixamorig_Neck", "Armature/Skeleton3D:mixamorig_RightArm", "Armature/Skeleton3D:mixamorig_RightForeArm", "Armature/Skeleton3D:mixamorig_RightHand", "Armature/Skeleton3D:mixamorig_RightShoulder", "Armature/Skeleton3D:mixamorig_Spine", "Armature/Skeleton3D:mixamorig_Spine1", "Armature/Skeleton3D:mixamorig_Spine2"]

[sub_resource type="AnimationNodeAnimation" id="AnimationNodeAnimation_d5rgd"]
animation = &"WALK"

[sub_resource type="AnimationNodeBlendTree" id="AnimationNodeBlendTree_ash6f"]
graph_offset = Vector2(-539.973, -39.0424)
nodes/Animation/node = SubResource("AnimationNodeAnimation_3tpsw")
nodes/Animation/position = Vector2(-140, 200)
nodes/JUMP/node = SubResource("AnimationNodeOneShot_2p8e8")
nodes/JUMP/position = Vector2(80, 60)
nodes/RUN/node = SubResource("AnimationNodeBlendSpace1D_8jiba")
nodes/RUN/position = Vector2(-340, 0)
nodes/WALK/node = SubResource("AnimationNodeBlend2_mh6d1")
nodes/WALK/position = Vector2(-160, 20)
nodes/animation/node = SubResource("AnimationNodeAnimation_d5rgd")
nodes/animation/position = Vector2(-340, 120)
nodes/output/position = Vector2(280, 60)
node_connections = [&"output", 0, &"JUMP", &"JUMP", 0, &"WALK", &"JUMP", 1, &"Animation", &"WALK", 0, &"RUN", &"WALK", 1, &"animation"]

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_15mpe"]
radius = 0.784521
height = 3.49475

[node name="Warrior" groups=["Player"] instance=ExtResource("1_8vmdt")]
wall_min_slide_angle = 0.436332
floor_stop_on_slope = false
floor_block_on_wall = false
floor_max_angle = 0.872665
script = SubResource("GDScript_kyy2f")

[node name="Skeleton3D" parent="Armature" index="0"]
transform = Transform3D(-1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0)
bones/0/position = Vector3(0.0350809, 1.83029, -0.0504526)
bones/0/rotation = Quaternion(-0.0368471, -0.367355, -0.0133822, 0.929254)
bones/1/rotation = Quaternion(0.035894, 0.0408299, -0.00793933, 0.99849)
bones/2/rotation = Quaternion(0.100177, 0.0813494, -0.0160099, 0.991509)
bones/3/rotation = Quaternion(0.100202, 0.0813492, -0.0160146, 0.991507)
bones/4/rotation = Quaternion(-0.0219104, -0.0109295, 0.00169182, 0.999699)
bones/5/rotation = Quaternion(-0.0561328, 0.176867, -0.0121499, 0.982558)
bones/7/rotation = Quaternion(-0.579189, -0.419127, 0.569827, -0.40518)
bones/8/rotation = Quaternion(0.409676, -0.0266328, 0.0843053, 0.907937)
bones/9/rotation = Quaternion(-2.49689e-05, 7.86949e-06, 0.406929, 0.91346)
bones/10/rotation = Quaternion(-0.0270351, 0.0271718, -0.00249009, 0.999262)
bones/11/rotation = Quaternion(0.630179, -0.376038, 0.531164, 0.423479)
bones/12/rotation = Quaternion(0.419064, 0.0786097, 0.172753, 0.887898)
bones/13/rotation = Quaternion(-2.31088e-05, -1.04947e-05, -0.363268, 0.931685)
bones/14/rotation = Quaternion(0.00890185, 0.00890856, 0.000296481, 0.999921)
bones/15/rotation = Quaternion(0.0266213, 0.220801, 0.969079, -0.106888)
bones/16/rotation = Quaternion(-0.32826, 1.02393e-05, 4.03812e-06, 0.944588)
bones/17/rotation = Quaternion(0.471234, 0.0723901, -0.028539, 0.878569)
bones/17/scale = Vector3(0.999986, 1, 1)
bones/18/rotation = Quaternion(0.356346, -0.0822846, 0.0139777, 0.930619)
bones/20/rotation = Quaternion(-0.15418, -0.00458545, 0.977997, 0.140461)
bones/21/rotation = Quaternion(-0.308644, -1.45011e-06, -1.14351e-06, 0.951178)
bones/22/rotation = Quaternion(0.61176, 0.0733691, 0.0204388, 0.787369)
bones/23/rotation = Quaternion(0.340567, 0.105928, -0.0379431, 0.933464)
bones/26/position = Vector3(0.0355836, 1.83029, -0.0500993)
bones/26/rotation = Quaternion(-0.0367797, -0.371997, -0.0135663, 0.927406)
bones/27/rotation = Quaternion(1, 1.21872e-09, -5.44292e-08, 5.30588e-10)
bones/28/rotation = Quaternion(1, 4.58719e-10, -7.45506e-08, -2.39366e-09)
bones/29/rotation = Quaternion(0.106898, 0.969083, -0.220777, 0.0266217)
bones/30/rotation = Quaternion(-0.328259, 1.01029e-05, 4.05132e-06, 0.944588)
bones/36/rotation = Quaternion(-0.140459, 0.977997, 0.00458628, -0.15418)
bones/37/rotation = Quaternion(-0.308568, -3.29427e-06, -1.19257e-06, 0.951202)
bones/43/rotation = Quaternion(0.035894, 0.0408298, -0.00793933, 0.99849)
bones/44/rotation = Quaternion(0.100177, 0.0813494, -0.0160099, 0.991509)
bones/45/rotation = Quaternion(0.100202, 0.0813492, -0.0160146, 0.991507)
bones/46/rotation = Quaternion(-0.0219104, -0.0109295, 0.00169182, 0.999699)
bones/47/rotation = Quaternion(-0.0561328, 0.176867, -0.0121499, 0.982558)
bones/48/rotation = Quaternion(-0.579189, -0.419127, 0.569827, -0.40518)
bones/49/rotation = Quaternion(0.409676, -0.0266321, 0.0843059, 0.907936)
bones/50/rotation = Quaternion(-4.83572e-07, -8.93832e-07, 0.406965, 0.913444)
bones/51/position = Vector3(0.331073, 0.179136, -0.00335554)
bones/54/rotation = Quaternion(0.630179, -0.376038, 0.531164, 0.423479)
bones/55/rotation = Quaternion(0.419065, 0.0786068, 0.172757, 0.887897)
bones/56/rotation = Quaternion(4.15384e-07, -1.29246e-06, -0.363414, 0.931628)
bones/57/position = Vector3(-0.325635, 0.170239, 0.0297582)
bones/60/position = Vector3(0.923563, 1.86699, -0.288587)
bones/60/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/61/position = Vector3(0.550561, 1.66891, 0.480217)
bones/61/rotation = Quaternion(0.850658, -0.130958, -0.41262, 0.298287)
bones/62/position = Vector3(-0.196947, 2.1618, -0.991159)
bones/62/rotation = Quaternion(-0.707107, 1.25371e-08, -4.07836e-08, 0.707107)
bones/63/position = Vector3(-0.616406, 1.67102, -0.394139)
bones/63/rotation = Quaternion(0.574196, -0.111084, 0.794422, 0.163867)
bones/64/position = Vector3(0.216424, 0.263502, 0.574462)
bones/64/rotation = Quaternion(-0.216096, 0.673319, 0.67269, 0.217789)
bones/65/position = Vector3(-5.28661e-06, 4.54841e-06, -2.55683e-05)
bones/65/rotation = Quaternion(-0.355222, 0.11786, -0.0452437, 0.926218)
bones/67/rotation = Quaternion(0.333282, -0.0980652, 0.0348851, 0.937064)
bones/68/position = Vector3(1.0044e-07, -1.57908e-05, 1.28874e-05)
bones/68/rotation = Quaternion(0.0222614, 0.00638273, -0.026892, 0.99937)
bones/78/rotation = Quaternion(0.0223078, 0.00638311, -0.026888, 0.999369)
bones/80/position = Vector3(-0.425303, 1.16226, 1.15123)
bones/80/rotation = Quaternion(-0.707107, 1.75038e-06, 3.72785e-06, 0.707107)
bones/81/position = Vector3(-0.110848, 0.263186, -0.629776)
bones/81/rotation = Quaternion(-0.454907, 0.540823, 0.541251, 0.455652)
bones/82/position = Vector3(5.43469e-06, -3.00349e-06, -1.69805e-05)
bones/82/rotation = Quaternion(-0.348866, -0.116619, 0.043825, 0.928855)
bones/84/rotation = Quaternion(0.326543, 0.100462, -0.0349361, 0.939179)
bones/85/position = Vector3(-5.193e-08, -7.16637e-06, 5.6567e-06)
bones/85/rotation = Quaternion(0.0151714, 0.00523282, -0.00341891, 0.999865)
bones/95/rotation = Quaternion(0.0152328, 0.0052616, -0.00343184, 0.999864)
bones/97/position = Vector3(-1.05103, 0.759927, 0.00341169)
bones/97/rotation = Quaternion(-0.707107, 1.06125e-06, 3.70159e-07, 0.707107)

[node name="BoneAttachment3D" type="BoneAttachment3D" parent="Armature/Skeleton3D" index="1"]
transform = Transform3D(0.942128, -0.118689, -0.313541, -0.0153773, 0.918952, -0.394068, 0.334901, 0.376084, 0.863946, 0.0353447, 2.52219, -0.0145904)
bone_name = "mixamorig_Spine2"
bone_idx = 3

[node name="Heavy_sword" parent="Armature/Skeleton3D/BoneAttachment3D" index="0" instance=ExtResource("2_y88qg")]
transform = Transform3D(-0.0433304, 0.202715, 0.668602, 0.0282428, -0.668831, 0.204615, 0.698087, 0.0396417, 0.0332219, -0.254506, 0.792596, -0.303512)

[node name="AnimationPlayer" parent="." index="1"]
autoplay = "IDLE"

[node name="SpringArmPivot" type="Node3D" parent="." index="2"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.82446, 0)

[node name="SpringArm3D" type="SpringArm3D" parent="SpringArmPivot" index="0"]
spring_length = 5.0

[node name="Camera3D" type="Camera3D" parent="SpringArmPivot/SpringArm3D" index="0"]

[node name="AnimationTree" type="AnimationTree" parent="." index="3"]
tree_root = SubResource("AnimationNodeBlendTree_ash6f")
anim_player = NodePath("../AnimationPlayer")
active = true
parameters/JUMP/active = false
parameters/RUN/blend_position = 0.00103093
parameters/WALK/blend_amount = 0.0

[node name="CollisionShape3D" type="CollisionShape3D" parent="." index="4"]
transform = Transform3D(0.999993, 0.00371281, -6.30021e-05, -0.00371207, 0.999953, 0.00897032, 9.63509e-05, -0.00897014, 0.99996, -0.000611633, 1.76726, 0.00839959)
shape = SubResource("CapsuleShape3D_15mpe")
